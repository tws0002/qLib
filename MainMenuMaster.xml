<?xml version="1.0" encoding="UTF-8"?>

<!-- Please note, that the files defining the main menu (ie, MainMenuCommon,
     MainMenuMaster, and MainMenuEscape)
     can exist in $HOME/houdiniX.Y/ directory and will supplement
     the original definitions found in $HFS/houdini/ -->

<mainMenu>
	<menuBar>


	<subMenu id = "qLib_menu">
	<modifyItem><insertBefore>help_menu</insertBefore></modifyItem>
	<label>qLib</label>

		<subMenu id="ql_browse_submenu">
		<label>Open in File Browser</label>

			<scriptItem id="h.ql_browse_HIP">
				<label>$HIP: Current HIP Directory...</label>
				<scriptCode><![CDATA[
import qlibutils; qlibutils.open_dir(env="HIP")]]>
				</scriptCode>
			</scriptItem>

			<scriptItem id="h.ql_browse_JOB">
				<label>$JOB: Jobs Root Directory...</label>
				<scriptCode><![CDATA[
import qlibutils; qlibutils.open_dir(env="JOB")]]>
				</scriptCode>
			</scriptItem>

		<separatorItem />

			<scriptItem id="h.ql_browse_HDALocation">
				<label>Selected HDA Location(s)...</label>
				<scriptCode><![CDATA[
import qlibutils; qlibutils.open_hda_dirs()]]>
				</scriptCode>
			</scriptItem>

			<separatorItem />

			<scriptItem id="h.ql_browse_HIH_root">
				<label>$HIH: User Config Files...</label>
				<scriptCode><![CDATA[
import qlibutils; qlibutils.open_dir(env="HIH")]]>
				</scriptCode>
			</scriptItem>

			<scriptItem id="h.ql_browse_HFS">
				<label>$HFS: Houdini Install Dir...</label>
				<scriptCode><![CDATA[
import qlibutils; qlibutils.open_dir(env="HFS")]]>
				</scriptCode>
			</scriptItem>

			<separatorItem />

			<scriptItem id="h.ql_browse_HOME">
				<label>$HOME: Home Directory...</label>
				<scriptCode><![CDATA[
import qlibutils; qlibutils.open_dir(env="HOME")]]>
				</scriptCode>
			</scriptItem>

		</subMenu>

		<subMenu id="ql_clipboard_submenu">
		<label>Copy to Clipboard</label>

			<scriptItem id="h.ql_clipboard_HIPFILE">
				<label>$HIPFILE: Full HIP Path/Name</label>
				<scriptCode><![CDATA[
import qlibutils; qlibutils.to_clipboard(env="HIPFILE")]]>
				</scriptCode>
			</scriptItem>

		<separatorItem />

			<scriptItem id="h.ql_clipboard_HIP">
				<label>$HIP: Current HIP Directory</label>
				<scriptCode><![CDATA[
import qlibutils; qlibutils.to_clipboard(env="HIP")]]>
				</scriptCode>
			</scriptItem>

			<scriptItem id="h.ql_clipboard_JOB">
				<label>$JOB: Jobs Root Directory</label>
				<scriptCode><![CDATA[
import qlibutils; qlibutils.to_clipboard(env="JOB")]]>
				</scriptCode>
			</scriptItem>

		</subMenu>

		<separatorItem />

		<subMenu id="ql_misc_submenu">
		<label>Misc</label>

			<scriptItem id="h.ql_misc_remove_embedded_hdas">
				<label>Uninstall Embedded HDAs...</label>
				<scriptCode><![CDATA[
import qlibutils; qlibutils.remove_embedded_hdas()]]>
				</scriptCode>
			</scriptItem>

			<separatorItem />

			<scriptItem id="h.ql_misc_show_houdinipath">
				<label>Show Houdini Path Entries...</label>
				<scriptCode><![CDATA[
import qlibutils; qlibutils.show_houdinipath(kwargs)]]>
				</scriptCode>
			</scriptItem>

			<scriptItem id="h.ql_misc_hconfig">
				<label>Show Set Env Variables (hconfig)...</label>
				<scriptCode><![CDATA[
import qlibutils; qlibutils.show_shellcmd_results(kwargs, cmd="hconfig", label="Defined Environment Variables")]]>
				</scriptCode>
			</scriptItem>

			<scriptItem id="h.ql_misc_hconfig_p">
				<label>Show Path Env Variables (hconfig -p)...</label>
				<scriptCode><![CDATA[
import qlibutils; qlibutils.show_shellcmd_results(kwargs, cmd="hconfig -p", label="Defined Environment Variables (with descriptions)")]]>
				</scriptCode>
			</scriptItem>

			<separatorItem />

			<scriptItem id="h.ql_misc_refresh_gallery_items">
				<label>Refresh Gallery Items</label>
				<scriptCode><![CDATA[
import qlibutils
qlibutils.update_gallery_items()
]]>
				</scriptCode>
			</scriptItem>

			<scriptItem id="h.ql_misc_menurefresh">
				<label>Refresh Popup Menus</label>
				<scriptCode><![CDATA[
hou.hscript("menurefresh")]]>
				</scriptCode>
			</scriptItem>

		</subMenu>

		<separatorItem />

		<!-- this should be added to the regular Houdini prefs submenu once it's finished -->

		<scriptItem id="h.ql_prefs_window">
			<label>Preferences...</label>
			<scriptCode><![CDATA[
hou.ui.displayMessage("- i don't wanna do my honework!!\n- whoa whoa whoa whoa whaaaat\n- i want CHICKEN 4 DAYZ!!!")
]]>
			</scriptCode>
		</scriptItem>

		<separatorItem />

		<scriptItem id="h.ql_prefs_window">
			<label>Help: Contents</label>
			<scriptCode><![CDATA[
import qlibutils
qlibutils.displayHelpPath("/qlib")
]]>
			</scriptCode>
		</scriptItem>

	</subMenu>



	<subMenu id = "file_menu">

		<separatorItem id="file_menu_sep_ql_holdfetch">
			<modifyItem><insertAfter>export_files</insertAfter></modifyItem>
		</separatorItem>

		<scriptItem id="h.ql_hip_hold">
			<modifyItem><insertAfter>file_menu_sep_ql_holdfetch</insertAfter></modifyItem>
			<label>Hold Scene [qL]...</label>
			<scriptCode><![CDATA[
import os, tempfile
tmp = os.path.join(tempfile.gettempdir(), 'qLib_hold-fetch.hip')
if hou.ui.displayMessage('Hold scene? (to %s)' % tmp, ('Yes', 'No'))==0:
	hou.ui.setStatusMessage('Holding scene (%s)...' % tmp, hou.severityType.ImportantMessage)
	F = hou.hipFile
	p = F.path()
	hou.hscript('setenv HIP_HELD = "%s"' % p)
	F.save(tmp, False)
	hou.hscript('setenv -u HIP_HELD')
	F.setName(p)
]]>
			</scriptCode>
		</scriptItem>

		<scriptItem id="h.ql_hip_fetch">
			<modifyItem><insertAfter>h.ql_hip_hold</insertAfter></modifyItem>
			<label>Fetch Scene [qL]...</label>
			<scriptCode><![CDATA[
import os, tempfile
tmp = os.path.join(tempfile.gettempdir(), 'qLib_hold-fetch.hip')
if hou.ui.displayMessage('Fetch scene? (from %s)' % tmp, ('Yes', 'No'))==0:
	hou.ui.setStatusMessage('Fetching scene (%s)...' % tmp, hou.severityType.ImportantMessage)
	try:
		F = hou.hipFile
		F.load(tmp, True)
		#if kwargs['shiftclick']: hou.setUpdateMode(hou.updateMode.Manual)
		p = str(hou.getenv("HIP_HELD"))
		hou.hscript('setenv -u HIP_HELD')
		F.setName(p)
	except:
		pass
]]>
			</scriptCode>
		</scriptItem>

		<separatorItem id="file_menu_sep_ql_holdfetch_post">
			<modifyItem><insertAfter>h.ql_hip_fetch</insertAfter></modifyItem>
		</separatorItem>

		<scriptItem id="h.ql_hip_recover">
			<modifyItem><insertAfter>file_menu_sep_ql_holdfetch_post</insertAfter></modifyItem>
			<label>Crash Recovery [qL]...</label>
			<scriptCode><![CDATA[
import qlibutils; qlibutils.do_crash_recovery(calledFromUI=True)]]>
			</scriptCode>
		</scriptItem>

		<separatorItem id="file_menu_sep_ql_save_pre">
			<modifyItem><insertAfter>saveastype_strip</insertAfter></modifyItem>
		</separatorItem>

		<scriptItem id="h.ql_hip_revert">
			<modifyItem><insertAfter>file_menu_sep_ql_save_pre</insertAfter></modifyItem>
			<label>Revert to Last Saved [qL]</label>
			<scriptCode><![CDATA[
import os.path
import qlibutils
file = hou.hipFile.path()
if os.path.isfile(file):
	do_it = hou.ui.displayMessage(
		"Revert to last saved version of the file?",
		buttons=("Revert", "Cancel", ),
		default_choice=1, close_choice=1)
	if do_it==0:
		hou.hipFile.load(file_name=file)]]>
			</scriptCode>
		</scriptItem>


	</subMenu>

	</menuBar>

</mainMenu>
